#!/usr/bin/env bash
set -e

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
CONTAINER_NAME="rzd-monitoring"
IMAGE_NAME="rzd-monitoring"
PORT="${1:-8088}"   # –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –ø–æ—Ä—Ç –ø–µ—Ä–≤—ã–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º –∏–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 8088

echo "üõë –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª—è—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä $CONTAINER_NAME (–µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)‚Ä¶"
docker rm -f "$CONTAINER_NAME" 2>/dev/null || echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $CONTAINER_NAME –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º."

echo "üóë –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª—è—é –æ–±—Ä–∞–∑ $IMAGE_NAME (–µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)‚Ä¶"
docker rmi -f "$IMAGE_NAME" 2>/dev/null || echo "–û–±—Ä–∞–∑ $IMAGE_NAME –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º."

echo "üî® –°–æ–±–∏—Ä–∞—é –Ω–æ–≤—ã–π –æ–±—Ä–∞–∑ $IMAGE_NAME‚Ä¶"
docker build -t "$IMAGE_NAME" .

echo "üöÄ –ó–∞–ø—É—Å–∫–∞—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä $CONTAINER_NAME –Ω–∞ –ø–æ—Ä—Ç—É $PORT‚Ä¶"
docker run -d \
  --name "$CONTAINER_NAME" \
  -p "${PORT}:8088" \
  "$IMAGE_NAME"

# –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
sleep 3

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
STATUS=$(docker inspect -f '{{.State.Status}}' "$CONTAINER_NAME" 2>/dev/null || echo "not_found")

if [[ "$STATUS" == "running" ]]; then
  echo "‚úîÔ∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $CONTAINER_NAME —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É $PORT"
  exit 0
else
  echo "‚ùå –û—à–∏–±–∫–∞: –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä $CONTAINER_NAME –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è! –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: $STATUS"
  echo "---- –ü–æ—Å–ª–µ–¥–Ω–∏–µ 100 —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ ----"
  docker logs --tail 100 "$CONTAINER_NAME" || true
  exit 1
fi
