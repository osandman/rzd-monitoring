param(
    [string]$containerName = "rzd-monitoring",
    [string]$imageName = "rzd-monitoring",
    [string]$port = 8088
)

Write-Host "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä $containerName (–µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)..."
docker stop $containerName 2>$null
docker rm $containerName 2>$null

Write-Host "üóë –£–¥–∞–ª—è—é –æ–±—Ä–∞–∑ $imageName (–µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)..."
docker rmi $imageName 2>$null

Write-Host "üî® –°–æ–±–∏—Ä–∞—é –Ω–æ–≤—ã–π –æ–±—Ä–∞–∑ $imageName..."
docker build -t $imageName .

Write-Host "üöÄ –ó–∞–ø—É—Å–∫–∞—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä $containerName..."
$portMapping = ("{0}:8088" -f $port)
docker run -d -p $portMapping --name $containerName $imageName

Start-Sleep -Seconds 3

$status = docker inspect -f '{{.State.Status}}' $containerName 2>$null

if ($status -eq "running") {
    Write-Host "‚úîÔ∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $containerName —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É $port"
} else {
    Write-Host "‚ùå –û—à–∏–±–∫–∞: –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä $containerName –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è!"
    Write-Host "---- –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ ----"
    docker logs $containerName
    exit 1
}